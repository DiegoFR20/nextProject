{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"D:\\\\TI\\\\JavaScript\\\\NextProject\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/Link';\nimport 'isomorphic-fetch';\n\nfunction Home(_ref) {\n  var _this = this;\n\n  var repositories = _ref.repositories;\n\n  __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/blog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  }, \"Blog\")), repositories.map(function (repo) {\n    return __jsx(\"h1\", {\n      key: repo.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 40\n      }\n    }, repo.name);\n  }));\n}\n\n_c = Home;\nexport function getServersideProps() {\n  return _getServersideProps.apply(this, arguments);\n}\n\nfunction _getServersideProps() {\n  _getServersideProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res, repositories;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('https://api.github.com/users/DiegoFR20/repos');\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            repositories = _context.sent;\n            console.log(repositories);\n            return _context.abrupt(\"return\", {\n              props: {\n                repositories: repositories\n              }\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getServersideProps.apply(this, arguments);\n}\n\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/TI/JavaScript/NextProject/pages/index.tsx"],"names":["React","Link","Home","repositories","map","repo","id","name","getServersideProps","fetch","res","json","console","log","props"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAO,kBAAP;;AAEA,SAASC,IAAT,OAAgC;AAAA;;AAAA,MAAhBC,YAAgB,QAAhBA,YAAgB;;AAExB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ,EAKKA,YAAY,CAACC,GAAb,CAAiB,UAAAC,IAAI;AAAA,WAAK;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBD,IAAI,CAACE,IAAxB,CAAL;AAAA,GAArB,CALL,CADJ;AASH;;KAVQL,I;AAYT,gBAAsBM,kBAAtB;AAAA;AAAA;;;iFAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACeC,KAAK,CAAC,8CAAD,CADpB;;AAAA;AACGC,YAAAA,GADH;AAAA;AAAA,mBAEwBA,GAAG,CAACC,IAAJ,EAFxB;;AAAA;AAEGR,YAAAA,YAFH;AAIHS,YAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;AAJG,6CAMI;AAAEW,cAAAA,KAAK,EAAE;AAAEX,gBAAAA,YAAY,EAAZA;AAAF;AAAT,aANJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AASP,eAAeD,IAAf","sourcesContent":["import React from 'react'\r\nimport Link from 'next/Link'\r\n\r\nimport 'isomorphic-fetch'\r\n\r\nfunction Home({ repositories }) {\r\n    (\r\n        <div>\r\n            <Link href=\"/blog\">\r\n                <a>Blog</a>\r\n            </Link>\r\n\r\n            {repositories.map(repo => (<h1 key={repo.id}>{repo.name}</h1>))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport async function getServersideProps() {\r\n    const res = await fetch('https://api.github.com/users/DiegoFR20/repos')\r\n    const repositories = await res.json()\r\n\r\n    console.log(repositories)\r\n\r\n    return { props: { repositories } }\r\n}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}